- name: copy k0s binary
  copy:
    dest: /usr/local/bin/
    src: "{{ k0s_binary }}"
    mode: '755'
- name: add localhost to hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: "127.0.0.1 localhost"
    state: present
- name: add localhost to hosts (ipv6)
  lineinfile:
    path: /etc/hosts
    regexp: '^::1'
    line: "::1 localhost"
    state: present
# - name: disable ufw (testing)
#   ufw:
#     state: disabled
- name: generate k0s.yml
  shell:
    creates: /root/k0s.yml
    cmd: 'k0s default-config > /root/k0s.yml'
- name: disable telemetry
  replace:
    path: /root/k0s.yml
    regexp: '(^telemetry:\n.*?enabled: )true'
    replace: '\1false'
- name: expose port 6443 to development subnet
  ufw:
    comment: "kube-apiserver"
    rule: allow
    to_port: "6443"
    from_ip: "{{ admin_subnet }}"
    proto: tcp
- name: expose port 6443 for k0s
  ufw:
    comment: "kube-apiserver"
    rule: allow
    to_port: "6443"
    from_ip: "{{ lan_subnet }}"
    proto: tcp
- name: expose port 9443 for k0s
  ufw:
    comment: "k0s-api"
    rule: allow
    to_port: "9443"
    from_ip: "{{ lan_subnet }}"
    proto: tcp
- name: expose port 2380 for etcd
  ufw:
    comment: "etcd peers"
    rule: allow
    to_port: "2380"
    from_ip: "{{ lan_subnet }}"
    proto: tcp
- name: expose port 179 for kube-router
  ufw:
    comment: "kube-router"
    rule: allow
    to_port: "179"
    from_ip: "{{ lan_subnet }}"
    proto: tcp
- name: expose port 4789 for calico
  ufw:
    comment: "calico"
    rule: allow
    to_port: "4789"
    from_ip: "{{ lan_subnet }}"
    proto: udp
- name: expose port 10250 for kubelet
  ufw:
    comment: "kubelet"
    rule: allow
    to_port: "10250"
    from_ip: "{{ lan_subnet }}"
    proto: tcp
- name: expose port 8132 for konnectivity
  ufw:
    comment: "konnectivity server"
    rule: allow
    to_port: "8132"
    from_ip: "{{ lan_subnet }}"
    proto: tcp
- name: expose port 8133 for konnectivity
  ufw:
    comment: "konnectivity server"
    rule: allow
    to_port: "8133"
    from_ip: "{{ lan_subnet }}"
    proto: tcp
# - name: install k0scontroller service
#   when: k0s_master | bool
#   shell:
#     cmd: 'k0s install controller'
# - name: enable k0scontroller service
#   when: k0s_master | bool
#   service:
#     name: k0scontroller
#     enabled: yes
#     state: started